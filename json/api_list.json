{
    "data": [
        {
            "id": "genMnemonic",
            "type_id": 101,
            "description": "genMnemonic is used to sign up a new user by hirarchecal deterministic wallet system integrated in the local client. Client generates mnemonic words and the hash of the mnemonic words as the UserID.",
            "parameters": []
        },
        {
            "id": "genAddressFromMnemonic",
            "type_id": 102,
            "description": "NewAddressWithMnemonic is used to create a new address with mnemonic words.",
            "parameters": []
        },
        {
            "id": "logIn",
            "type_id": -102001,
            "description": "LogIn is used to login to OBD.",
            "parameters": [
                {
                    "name": "mnemonic",
                    "buttons": [
                        {
                            "innerText": "Select",
                            "onclick": "displayUserDataInNewHtml('MnemonicWords')"
                        },
                        {
                            "innerText": "Create",
                            "onclick": "autoCreateMnemonic()"
                        }
                    ]
                }
            ]
        },
        {
            "id": "connectP2PPeer",
            "type_id": -102003,
            "description": "connectP2PPeer is a temp func in debugging mode. It connects to a p2p node.",
            "parameters": [
                {
                    "name": "remote_node_address",
                    "buttons": []
                }
            ]
        },
        {
            "id": "openChannel",
            "type_id": -100032,
            "description": "OpenChannel is used to request to create a channel with someone.",
            "parameters": [
                {
                    "name": "recipient_node_peer_id",
                    "buttons": [
                        {
                            "innerText": "Counterparties",
                            "onclick": "displayUserDataInNewHtml('Counterparties')"
                        }
                    ]
                },
                {
                    "name": "recipient_user_peer_id",
                    "buttons": [
                        {
                            "innerText": "Counterparties",
                            "onclick": "displayUserDataInNewHtml('Counterparties')"
                        }
                    ]
                },
                {
                    "name": "funding_pubkey",
                    "help": "This Public Key of a wallet address will be used to generate a channel 2-2 multi-sig address.",
                    "imgPath": "doc/tooltip/funding_pubkey.png",
                    "buttons": [
                        {
                            "innerText": "Select",
                            "onclick": "displayUserDataInNewHtml('MyAddresses')"
                        },
                        {
                            "innerText": "Create",
                            "onclick": "autoCreateAddress()"
                        }
                    ]
                }
            ]
        },
        {
            "id": "acceptChannel",
            "type_id": -100033,
            "description": "AcceptChannel is used to response to request of creating channel. Bob replies to accept, his OBD completes his message and routes it to Alice's OBD. Then Alice sees the response of acceptance.",
            "parameters": [
                {
                    "name": "recipient_node_peer_id",
                    "buttons": [
                        {
                            "innerText": "Counterparties",
                            "onclick": "displayUserDataInNewHtml('Counterparties')"
                        }
                    ]
                },
                {
                    "name": "recipient_user_peer_id",
                    "buttons": [
                        {
                            "innerText": "Counterparties",
                            "onclick": "displayUserDataInNewHtml('Counterparties')"
                        }
                    ]
                },
                {
                    "name": "temporary_channel_id",
                    "help": "After invoked the OpenChannel API by counterparty, OBD will generate a temporary channel id.",
                    "buttons": [
                        {
                            "innerText": "Display",
                            "onclick": "displayMyChannelList(5, 1)"
                        }
                    ]
                },
                {
                    "name": "funding_pubkey",
                    "help": "This Public Key of a wallet address will be used to generate a channel 2-2 multi-sig address with another PubKey from counterparty.",
                    "imgPath": "doc/tooltip/funding_pubkey.png",
                    "buttons": [
                        {
                            "innerText": "Select",
                            "onclick": "displayUserDataInNewHtml('MyAddresses')"
                        },
                        {
                            "innerText": "Create",
                            "onclick": "autoCreateAddress()"
                        }
                    ]
                }
            ]
        },
        {
            "id": "fundingBitcoin",
            "type_id": -102109,
            "description": "fundingBitcoin is used for depositing bitcoin into a channel. Since the basic Omnilayer protocal uses BTC as miner fee in transferring assets, this message -102109 is special for depositing BTC for future transactions.  NOTE: For the current design, [fundingBitcoin] need to be run 3 times. And every time [fundingBitcoin] done, [bitcoinFundingCreated] and [bitcoinFundingSigned] need to be run in order. Omni Core will support sendmany soon, so the 3 times BTC funding will not be required in the next version of OBD.",
            "parameters": [
                {
                    "name": "from_address",
                    "help": "Has some bitcoin in this address.",
                    "buttons": [
                        {
                            "innerText": "Select",
                            "onclick": "displayUserDataInNewHtml('MyAddresses')"
                        },
                        {
                            "innerText": "Create",
                            "onclick": "autoCreateAddress(-102109)"
                        },
                        {
                            "innerText": "Bitcoin Faucet",
                            "onclick": "openTestnetFaucet()"
                        }
                    ]
                },
                {
                    "name": "from_address_private_key",
                    "help": "Client sign the transaction with this private key.",
                    "disable": "yes",
                    "buttons": []
                },
                {
                    "name": "to_address",
                    "help": "This is channel 2-2 multi-sig address generated after AcceptChannel API invoked with counterparty.",
                    "buttons": [
                        {
                            "innerText": "Display (Channel Address)",
                            "onclick": "displayMyChannelList(5, 1)"
                        }
                    ]
                },
                {
                    "name": "amount",
                    "help": "It can automatically calculate how much bitcoin needs to be recharged in the channel.",
                    "buttons": [
                        {
                            "innerText": "Auto Calc",
                            "onclick": "autoCalcAmount()"
                        }
                    ]
                },
                {
                    "name": "miner_fee",
                    "buttons": [
                        {
                            "innerText": "Auto Calc",
                            "onclick": "autoCalcMinerFee()"
                        }
                    ]
                }
            ]
        },
        {
            "id": "bitcoinFundingCreated",
            "type_id": -100340,
            "description": "bitcoinFundingCreated is used to notify the success of funding BTC to the counterparty of the channel. Alice tells her OBD to notify Bob that she created the funding transaction by payloads packed in this message -3400.",
            "parameters": [
                {
                    "name": "recipient_node_peer_id",
                    "buttons": [
                        {
                            "innerText": "Counterparties",
                            "onclick": "displayUserDataInNewHtml('Counterparties')"
                        }
                    ]
                },
                {
                    "name": "recipient_user_peer_id",
                    "buttons": [
                        {
                            "innerText": "Counterparties",
                            "onclick": "displayUserDataInNewHtml('Counterparties')"
                        }
                    ]
                },
                {
                    "name": "temporary_channel_id",
                    "buttons": [
                        {
                            "innerText": "Display",
                            "onclick": "displayMyChannelList(5, 1)"
                        }
                    ]
                },
                {
                    "name": "funding_tx_hex",
                    "help": "The commitment transaction hex created in fundingBitcoin api (type 1009).",
                    "imgPath": "doc/tooltip/3400-3500.png",
                    "buttons": [
                    ]
                },
                {
                    "name": "channel_address_private_key",
                    "help": "OBD create a revockable delivery transaction (RD Tx). Client sign the transaction with this private key. The RD tx get bitcoin of deposit to channel (type 2109) back to sender if counterparty always does not response.",
                    "disable": "yes",
                    "buttons": []
                }
            ]
        },
        {
            "id": "bitcoinFundingSigned",
            "type_id": -100350,
            "description": "bitcoinFundingSigned is used to response the transfering bitcoin event by the partner of the channel. Bob tells his OBD to reply Alice that he knows the funding by message -3500.",
            "parameters": [
                {
                    "name": "recipient_node_peer_id",
                    "buttons": [
                        {
                            "innerText": "Counterparties",
                            "onclick": "displayUserDataInNewHtml('Counterparties')"
                        }
                    ]
                },
                {
                    "name": "recipient_user_peer_id",
                    "buttons": [
                        {
                            "innerText": "Counterparties",
                            "onclick": "displayUserDataInNewHtml('Counterparties')"
                        }
                    ]
                },
                {
                    "name": "temporary_channel_id",
                    "buttons": [
                        {
                            "innerText": "Display",
                            "onclick": "displayMyChannelList(5, 1)"
                        }
                    ]
                },
                {
                    "name": "funding_txid",
                    "help": "The commitment transaction txid created in fundingBitcoin api (type 1009).",
                    "imgPath": "doc/tooltip/3400-3500.png",
                    "buttons": []
                },
                {
                    "name": "signed_miner_redeem_transaction_hex",
                    "buttons": []
                },
                {
                    "name": "channel_address_private_key",
                    "help": "This key is the private key of the Bob's address used to create the Channel Address. Client sign the transaction with it. This RD transaction get bitcoin of deposit to channel (type 2109) back to Alice if Bob always does not response.",
                    "disable": "yes",
                    "buttons": []
                }
            ]
        },
        {
            "id": "fundingAsset",
            "type_id": -102120,
            "description": "fundingAsset do: Alice starts to deposit omni assets to the channel. This is quite similar to the the btc funding procedure.",
            "parameters": [
                {
                    "name": "from_address",
                    "help": "Has some omni assets in this address.",
                    "buttons": [
                        {
                            "innerText": "Select",
                            "onclick": "displayUserDataInNewHtml('MyAddresses')"
                        },
                        {
                            "innerText": "Create",
                            "onclick": "autoCreateAddress(-102120)"
                        },
                        {
                            "innerText": "Omni Faucet",
                            "onclick": "displayUserDataInNewHtml('OmniFaucet')"
                        }
                    ]
                },
                {
                    "name": "from_address_private_key",
                    "help": "OBD create a transfer commitment transaction. Client sign it with this private key.",
                    "imgPath": "doc/tooltip/FundingAsset.png",
                    "disable": "yes",
                    "buttons": []
                },
                {
                    "name": "to_address",
                    "help": "This is channel 2-2 multi-sig address generated after AcceptChannel API invoked with counterparty.",
                    "buttons": [
                        {
                            "innerText": "Display (Channel Address)",
                            "onclick": "displayMyChannelList(5, 1)"
                        }
                    ]
                },
                {
                    "name": "amount",
                    "help": "The number of deposit to channel and minimum amount is 0.001",
                    "buttons": []
                },
                {
                    "name": "property_id",
                    "help": "This is property id of a omni asset.",
                    "buttons": [
                        {
                            "innerText": "Display",
                            "onclick": "displayUserDataInNewHtml('MyAddresses')"
                        }
                    ]
                }
            ]
        },
        {
            "id": "assetFundingCreated",
            "type_id": -100034,
            "description": "assetFundingCreated is used to notify the success of omni asset funding transaction to the counter partner of the channel.",
            "parameters": [
                {
                    "name": "recipient_node_peer_id",
                    "buttons": [
                        {
                            "innerText": "Counterparties",
                            "onclick": "displayUserDataInNewHtml('Counterparties')"
                        }
                    ]
                },
                {
                    "name": "recipient_user_peer_id",
                    "buttons": [
                        {
                            "innerText": "Counterparties",
                            "onclick": "displayUserDataInNewHtml('Counterparties')"
                        }
                    ]
                },
                {
                    "name": "temporary_channel_id",
                    "buttons": [
                        {
                            "innerText": "Display",
                            "onclick": "displayMyChannelList(5, 1)"
                        }
                    ]
                },
                {
                    "name": "funding_tx_hex",
                    "help": "The commitment transaction hex created in FundingAsset api (type 2001).",
                    "imgPath": "doc/tooltip/FundingAsset.png",
                    "buttons": [
                    ]
                },
                {
                    "name": "temp_address_pub_key",
                    "help": "This public key of an address (Alice2 in picture below) will be used to create a temp 2-2 multi-sig address as output 0 of C1a transaction.",
                    "imgPath": "doc/tooltip/Cx-RDx.png",
                    "disable": "yes",
                    "buttons": []
                },
                {
                    "name": "temp_address_private_key",
                    "help": "This private key of an address (Alice2 in picture below) will be used to sign RD1a transaction. The RD1a transaction get omni asset in channel back to Alice after a certain time (like seq = 1000 blocks) if Alice forced to close channel (broadcast C1a transaction).",
                    "imgPath": "doc/tooltip/Cx-RDx.png",
                    "disable": "yes",
                    "buttons": []
                },
                {
                    "name": "channel_address_private_key",
                    "help": "OBD create C1a transaction. Client sign it with this private key. The C1a transaction represents the balance distribution in the channel.",
                    "imgPath": "doc/tooltip/Cx-RDx.png",
                    "disable": "yes",
                    "buttons": []
                }
            ]
        },
        {
            "id": "assetFundingSigned",
            "type_id": -100035,
            "description": "AssetFundingSigned is used to response the transfering omni asset event by the partner of the channel. Bob tells his OBD to reply Alice that he knows the funding by message -35, and OBD will creat commitment transactions (C1a & RD1a).",
            "parameters": [
                {
                    "name": "recipient_node_peer_id",
                    "buttons": [
                        {
                            "innerText": "Counterparties",
                            "onclick": "displayUserDataInNewHtml('Counterparties')"
                        }
                    ]
                },
                {
                    "name": "recipient_user_peer_id",
                    "buttons": [
                        {
                            "innerText": "Counterparties",
                            "onclick": "displayUserDataInNewHtml('Counterparties')"
                        }
                    ]
                },
                {
                    "name": "temporary_channel_id",
                    "help": "The temporary channel id created in AssetFundingCreated api (type -100034).",
                    "buttons": [
                        {
                            "innerText": "Display",
                            "onclick": "displayMyChannelList(5, 1)"
                        }
                    ]
                },
                {
                    "name": "signed_alice_rsmc_hex",
                    "buttons": []
                },
                {
                    "name": "channel_address_private_key",
                    "help": "Client use the private key to sign the C1a and RD1a transactions created by AssetFundingCreated (type -100034).",
                    "imgPath": "doc/tooltip/34-35.png",
                    "disable": "yes",
                    "buttons": []
                }
            ]
        },
        {
            "id": "commitmentTransactionCreated",
            "type_id": -100351,
            "description": "RSMC Commitment Transaction Created is used for paying omni assets by Revocable Sequence Maturity Contract(RSMC) within a channel. After creating a channel and funding the channel by BTC and assets, Alice/Bob then is able to use this channel to pay to the counterparty. OBD constructs commitment transaction for each payment between the two counterparties. The i-th commitment transaction will be invalidated after creating the (i+1)-th commitment transaction. [These temp addresses] are some data generated by OBD used in contructing temporary multi-sig addresses and temporary transactions for i-th commitment transaction. You shall find your corresponding temporary data within the responses of your OBD.",
            "parameters": [
                {
                    "name": "recipient_node_peer_id",
                    "buttons": [
                        {
                            "innerText": "Counterparties",
                            "onclick": "displayUserDataInNewHtml('Counterparties')"
                        }
                    ]
                },
                {
                    "name": "recipient_user_peer_id",
                    "buttons": [
                        {
                            "innerText": "Counterparties",
                            "onclick": "displayUserDataInNewHtml('Counterparties')"
                        }
                    ]
                },
                {
                    "name": "channel_id",
                    "buttons": [
                        {
                            "innerText": "Display",
                            "onclick": "displayMyChannelList(5, 1)"
                        }
                    ]
                },
                {
                    "name": "amount",
                    "help": "The number of transfer and minimum amount is 0.001.",
                    "buttons": []
                },
                {
                    "name": "channel_address_private_key",
                    "help": "Client use the private key to sign the C2a transaction in below picture as <Alice Sig>.",
                    "imgPath": "doc/tooltip/C2a.png",
                    "disable": "yes",
                    "buttons": []
                },
                {
                    "name": "curr_temp_address_pub_key",
                    "help": "This public key of an address (Alice3 in below picture) will be used to create a temp 2-2 multi-sig address as output 0 of newer Cx transaction like C2a in below picture.",
                    "imgPath": "doc/tooltip/C2a.png",
                    "disable": "yes",
                    "buttons": []
                },
                {
                    "name": "curr_temp_address_private_key",
                    "help": "This private key of an address (Alice3's) will be used to sign RD2a transaction in below picture. The RD transaction get omni asset in channel back to Alice delay a lock time (like seq = 1000 blocks) if Alice forced to close channel (broadcast C2a transaction).",
                    "imgPath": "doc/tooltip/C2a.png",
                    "disable": "yes",
                    "buttons": []
                },
                {
                    "name": "last_temp_address_private_key",
                    "help": "See below picture, this is the private key of Alice2 in the last RSMC transaction (C1a). It will be used to sign BR1a transaction. When Alice cheats, the BR transaction will punish Alice and transfer all assets belonging to Alice to Bob.",
                    "imgPath": "doc/tooltip/BR1a.png",
                    "disable": "yes",
                    "buttons": []
                }
            ]
        },
        {
            "id": "commitmentTransactionAccepted",
            "type_id": -100352,
            "description": "commitmentTransactionAccepted is used for Receiver revoke the previous commitment transaction and ackonwledge the new transaction.",
            "parameters": [
                {
                    "name": "recipient_node_peer_id",
                    "buttons": [
                        {
                            "innerText": "Counterparties",
                            "onclick": "displayUserDataInNewHtml('Counterparties')"
                        }
                    ]
                },
                {
                    "name": "recipient_user_peer_id",
                    "buttons": [
                        {
                            "innerText": "Counterparties",
                            "onclick": "displayUserDataInNewHtml('Counterparties')"
                        }
                    ]
                },
                {
                    "name": "channel_id",
                    "buttons": [
                        {
                            "innerText": "Display",
                            "onclick": "displayMyChannelList(5, 1)"
                        }
                    ]
                },
                {
                    "name": "msg_hash",
                    "help": "Commitment hash of C2a transaction created by Alice.",
                    "imgPath": "doc/tooltip/C2a.png",
                    "buttons": []
                },
                {
                    "name": "c2a_rsmc_signed_hex",
                    "buttons": []
                },
                {
                    "name": "c2a_counterparty_signed_hex",
                    "buttons": []
                },
                {
                    "name": "channel_address_private_key",
                    "help": "Client use the private key to sign the C2a and BR1a transaction in below picture as Bob Sig. And used to create and sign C2b, RD2a transaction.",
                    "imgPath": "doc/tooltip/BR1a.png",
                    "disable": "yes",
                    "buttons": []
                },
                {
                    "name": "curr_temp_address_pub_key",
                    "help": "This public key of an address (Bob3 in below picture) will be used to create a temp 2-2 multi-sig address as output 0 of newer Cx transaction like C2b in below picture.",
                    "imgPath": "doc/tooltip/C2b.png",
                    "disable": "yes",
                    "buttons": []
                },
                {
                    "name": "curr_temp_address_private_key",
                    "help": "This private key of an address (Bob3's) will be used to sign RD2b transaction in below picture. The RD transaction get omni asset in channel back to Bob delay a lock time (like seq = 1000 blocks) if Bob forced to close channel (broadcast C2b transaction).",
                    "imgPath": "doc/tooltip/C2b.png",
                    "disable": "yes",
                    "buttons": []
                },
                {
                    "name": "last_temp_address_private_key",
                    "help": "See below picture, this is the private key of Alice2 in the last RSMC transaction (C1a). It will be used to sign BR1a transaction. When Alice cheats, the BR transaction will punish Alice and transfer all assets belonging to Alice to Bob.",
                    "imgPath": "doc/tooltip/BR1a.png",
                    "disable": "yes",
                    "buttons": []
                }
            ]
        },
        {
            "id": "addInvoice",
            "type_id": -100402,
            "description": "addInvoice is used to generate an invoice for receiver.",
            "parameters": [
                {
                    "name": "property_id",
                    "buttons": [
                        {
                            "innerText": "Display",
                            "onclick": "displayUserDataInNewHtml('MyAddresses')"
                        }
                    ]
                },
                {
                    "name": "amount",
                    "help": "The number of transfer and minimum amount is 0.001.",
                    "buttons": []
                },
                {
                    "name": "h",
                    "help": "The H (Hash of a Preimage R) currently is Public Key of a wallet address, and the R (Preimage R) is Private Key of a wallet address. This is a temporary solution.",
                    "buttons": [
                        {
                            "innerText": "Create",
                            "onclick": "autoCreateAddress(-100402)"
                        }
                    ]
                },
                {
                    "name": "expiry_time",
                    "help": "Example: 2020-7-16",
                    "buttons": []
                },
                {
                    "name": "description",
                    "help": "A memo",
                    "buttons": []
                }
            ]
        },
        {
            "id": "payInvoice",
            "type_id": 100,
            "description": "payInvoice is used to automatically transfer asset to counterparty.",
            "parameters": [
                {
                    "name": "invoice",
                    "buttons": []
                }
            ]
        },
        {
            "id": "HTLCFindPath",
            "type_id": -100401,
            "description": "HTLCFindPath is used to find a routing between A and B node for launch a HTLC transfer.",
            "parameters": [
                {
                    "name": "invoice",
                    "buttons": []
                },
                {
                    "name": "recipient_node_peer_id",
                    "buttons": [
                        {
                            "innerText": "Counterparties",
                            "onclick": "displayUserDataInNewHtml('Counterparties')"
                        }
                    ]
                },
                {
                    "name": "recipient_user_peer_id",
                    "buttons": [
                        {
                            "innerText": "Counterparties",
                            "onclick": "displayUserDataInNewHtml('Counterparties')"
                        }
                    ]
                },
                {
                    "name": "property_id",
                    "buttons": [
                        {
                            "innerText": "Display",
                            "onclick": "displayUserDataInNewHtml('MyAddresses')"
                        }
                    ]
                },
                {
                    "name": "amount",
                    "help": "The number of transfer and minimum amount is 0.001.",
                    "buttons": []
                },
                {
                    "name": "h",
                    "help": "The H (Hash of a Preimage R) currently is Public Key of a wallet address, and the R (Preimage R) is Private Key of a wallet address. This is a temporary solution.",
                    "buttons": [
                        {
                            "innerText": "Display",
                            "onclick": "displayUserDataInNewHtml('MyAddresses')"
                        }
                    ]
                },
                {
                    "name": "expiry_time",
                    "help": "Example: 2020-7-16",
                    "buttons": []
                },
                {
                    "name": "description",
                    "help": "A memo",
                    "buttons": []
                }
            ]
        },
        {
            "id": "addHTLC",
            "type_id": -100040,
            "description": "addHTLC is used for looking for a path to transfer to target and Send H to middleman.",
            "parameters": [
                {
                    "name": "recipient_node_peer_id",
                    "buttons": [
                        {
                            "innerText": "Counterparties",
                            "onclick": "displayUserDataInNewHtml('Counterparties')"
                        }
                    ]
                },
                {
                    "name": "recipient_user_peer_id",
                    "buttons": [
                        {
                            "innerText": "Counterparties",
                            "onclick": "displayUserDataInNewHtml('Counterparties')"
                        }
                    ]
                },
                {
                    "name": "amount",
                    "help": "The number of transfer and minimum amount is 0.001.",
                    "buttons": []
                },
                {
                    "name": "fee_in_amount",
                    "disable": "yes",
                    "buttons": []
                },
                {
                    "name": "fee_rate",
                    "disable": "yes",
                    "buttons": []
                },
                {
                    "name": "memo",
                    "buttons": []
                },
                {
                    "name": "h",
                    "help": "The H (Hash of a Preimage R) currently is Public Key of a wallet address, and the R (Preimage R) is Private Key of a wallet address. This is a temporary solution.",
                    "buttons": [
                    ]
                },
                {
                    "name": "routing_packet",
                    "help": "The path from sender to final receiver.",
                    "buttons": [
                    ]
                },
                {
                    "name": "cltv_expiry",
                    "help": "The blocks height for waiting time.",
                    "buttons": []
                },
                {
                    "name": "channel_address_private_key",
                    "help": "Client use the private key to sign C2a and BR2a transaction in below picture as Alice Sig.",
                    "imgPath": "doc/tooltip/HTLC-1.png",
                    "disable": "yes",
                    "buttons": []
                },
                {
                    "name": "curr_rsmc_temp_address_pub_key",
                    "help": "This public key of an address (Alice's address in output 0 of C2a in below picture) will be used to create a temp 2-2 multi-sig address as output 0 of newer Cx transaction like C2a in below picture.",
                    "imgPath": "doc/tooltip/HTLC-1.png",
                    "disable": "yes",
                    "buttons": []
                },
                {
                    "name": "curr_rsmc_temp_address_private_key",
                    "help": "This private key of an address (Alice's) will be used to sign RD2a and BR2a transaction in below picture.",
                    "imgPath": "doc/tooltip/HTLC-1.png",
                    "disable": "yes",
                    "buttons": []
                },
                {
                    "name": "curr_htlc_temp_address_pub_key",
                    "help": "This public key of an address (Alice's address in output 2 of C2a in below picture) will be used to create a temp 2-2 multi-sig address as output 2 of newer Cx transaction like C2a in below picture.",
                    "imgPath": "doc/tooltip/HTLC-2.png",
                    "disable": "yes",
                    "buttons": []
                },
                {
                    "name": "curr_htlc_temp_address_private_key",
                    "help": "This private key of an address (Alice's) will be used to sign HED1a transaction in below picture.",
                    "imgPath": "doc/tooltip/HTLC-2.png",
                    "disable": "yes",
                    "buttons": []
                },
                {
                    "name": "curr_htlc_temp_address_for_ht1a_pub_key",
                    "help": "This public key of an address (Alice's address in output 2 of C2a in below picture) will be used to create a temp 2-2 multi-sig address as output 2 of newer Cx transaction like C2a in below picture.",
                    "imgPath": "doc/tooltip/HTLC-2.png",
                    "disable": "yes",
                    "buttons": []
                },
                {
                    "name": "curr_htlc_temp_address_for_ht1a_private_key",
                    "help": "This private key of an address (Alice's) will be used to sign HT1a transaction in below picture.",
                    "imgPath": "doc/tooltip/HTLC-2.png",
                    "disable": "yes",
                    "buttons": []
                },
                {
                    "name": "last_temp_address_private_key",
                    "help": "This is the private key used in last transaction by Alice. It will be used to sign ?  transaction in below picture as Alice Sig.",
                    "imgPath": "doc/tooltip/HTLC-2.png",
                    "disable": "yes",
                    "buttons": []
                }
            ]
        },
        {
            "id": "HTLCSigned",
            "type_id": -100041,
            "description": "HTLCSigned is used to response a routing request by middleman.",
            "parameters": [
                {
                    "name": "recipient_node_peer_id",
                    "buttons": [
                        {
                            "innerText": "Counterparties",
                            "onclick": "displayUserDataInNewHtml('Counterparties')"
                        }
                    ]
                },
                {
                    "name": "recipient_user_peer_id",
                    "buttons": [
                        {
                            "innerText": "Counterparties",
                            "onclick": "displayUserDataInNewHtml('Counterparties')"
                        }
                    ]
                },
                {
                    "name": "payer_commitment_tx_hash",
                    "help": "The hash of commitment transaction created in addHTLC (type -40).",
                    "buttons": []
                },
                {
                    "name": "c3a_complete_signed_rsmc_hex",
                    "buttons": []
                },
                {
                    "name": "c3a_complete_signed_counterparty_hex",
                    "buttons": []
                },
                {
                    "name": "c3a_complete_signed_htlc_hex",
                    "buttons": []
                },
                {
                    "name": "channel_address_private_key",
                    "help": "Client use the private key to sign C2b and BR2b transaction in below picture as Bob Sig.",
                    "imgPath": "doc/tooltip/HTLC-3.png",
                    "disable": "yes",
                    "buttons": []
                },
                {
                    "name": "curr_rsmc_temp_address_pub_key",
                    "help": "This public key of an address (Bob's address in output 1 of C2b in below picture) will be used to create a temp 2-2 multi-sig address as output 1 of newer Cx transaction like C2b in below picture.",
                    "imgPath": "doc/tooltip/HTLC-3.png",
                    "disable": "yes",
                    "buttons": []
                },
                {
                    "name": "curr_rsmc_temp_address_private_key",
                    "help": "This private key of an address (Bob's) will be used to sign RD2b and BR2b transaction in below picture.",
                    "imgPath": "doc/tooltip/HTLC-3.png",
                    "disable": "yes",
                    "buttons": []
                },
                {
                    "name": "curr_htlc_temp_address_pub_key",
                    "help": "This public key of an address (Bob's address in output 2 of C2b in below picture) will be used to create a temp 2-2 multi-sig address as output 2 of newer Cx transaction like C2b in below picture.",
                    "imgPath": "doc/tooltip/HTLC-3.png",
                    "disable": "yes",
                    "buttons": []
                },
                {
                    "name": "curr_htlc_temp_address_private_key",
                    "help": "This private key of an address (Bob's) will be used to sign HE1b transaction in below picture.",
                    "imgPath": "doc/tooltip/HTLC-4.png",
                    "disable": "yes",
                    "buttons": []
                },
                {
                    "name": "last_temp_address_private_key",
                    "help": "This is the private key used in last transaction by Alice. It will be used to sign ?  transaction in below picture as Bob Sig.",
                    "imgPath": "doc/tooltip/HTLC-4.png",
                    "disable": "yes",
                    "buttons": []
                }
            ]
        },
        {
            "id": "forwardR",
            "type_id": -100045,
            "description": "forwardR is used to forward R to a node.",
            "parameters": [
                {
                    "name": "recipient_node_peer_id",
                    "buttons": [
                        {
                            "innerText": "Counterparties",
                            "onclick": "displayUserDataInNewHtml('Counterparties')"
                        }
                    ]
                },
                {
                    "name": "recipient_user_peer_id",
                    "buttons": [
                        {
                            "innerText": "Counterparties",
                            "onclick": "displayUserDataInNewHtml('Counterparties')"
                        }
                    ]
                },
                {
                    "name": "channel_id",
                    "buttons": [
                        {
                            "innerText": "Display",
                            "onclick": "displayMyChannelList(5, 1)"
                        }
                    ]
                },
                {
                    "name": "r",
                    "help": "The R (a Preimage R) currently is Private Key of a wallet address, and the H (Hash of a Preimage R) is Public Key of a wallet address. This is a temporary solution.",
                    "buttons": [
                        {
                            "innerText": "Display",
                            "onclick": "displayUserDataInNewHtml('MyAddresses')"
                        }
                    ]
                },
                {
                    "name": "channel_address_private_key",
                    "help": "Client use the private key to sign HTD1b transaction in below picture.",
                    "imgPath": "doc/tooltip/HTLC-4.png",
                    "disable": "yes",
                    "buttons": []
                }
            ]
        },
        {
            "id": "signR",
            "type_id": -100046,
            "description": "signR: Reciever reverify R. If correct, then creates rest HTLC commitment transactions.",
            "parameters": [
                {
                    "name": "recipient_node_peer_id",
                    "buttons": [
                        {
                            "innerText": "Counterparties",
                            "onclick": "displayUserDataInNewHtml('Counterparties')"
                        }
                    ]
                },
                {
                    "name": "recipient_user_peer_id",
                    "buttons": [
                        {
                            "innerText": "Counterparties",
                            "onclick": "displayUserDataInNewHtml('Counterparties')"
                        }
                    ]
                },
                {
                    "name": "channel_id",
                    "buttons": [
                        {
                            "innerText": "Display",
                            "onclick": "displayMyChannelList(5, 1)"
                        }
                    ]
                },
                {
                    "name": "c3b_htlc_herd_complete_signed_hex",
                    "buttons": []
                },
                {
                    "name": "c3b_htlc_hebr_partial_signed_hex",
                    "buttons": []
                },
                {
                    "name": "channel_address_private_key",
                    "help": "Client use the private key to sign HERD1b transaction in below picture.",
                    "imgPath": "doc/tooltip/HTLC-4.png",
                    "disable": "yes",
                    "buttons": []
                }
            ]
        },
        {
            "id": "closeHTLC",
            "type_id": -100049,
            "description": "closeHTLC is used to close a HTLC channel. For continue using OBD to transfer assets OR some reasons Alice need to close this HTLC channel between she and Bob. Then Alice launch the closing request.",
            "parameters": [
                {
                    "name": "recipient_node_peer_id",
                    "buttons": [
                        {
                            "innerText": "Counterparties",
                            "onclick": "displayUserDataInNewHtml('Counterparties')"
                        }
                    ]
                },
                {
                    "name": "recipient_user_peer_id",
                    "buttons": [
                        {
                            "innerText": "Counterparties",
                            "onclick": "displayUserDataInNewHtml('Counterparties')"
                        }
                    ]
                },
                {
                    "name": "channel_id",
                    "buttons": [
                        {
                            "innerText": "Display",
                            "onclick": "displayMyChannelList(5, 1)"
                        }
                    ]
                },
                {
                    "name": "channel_address_private_key",
                    "help": "Client use the private key to sign newer RSMC transaction like C3a.",
                    "imgPath": "doc/tooltip/HTLC-1.png",
                    "disable": "yes",
                    "buttons": []
                },
                {
                    "name": "last_rsmc_temp_address_private_key",
                    "help": "Private Key of creating temporary 2-2 multi-sig address in previous RSMC transaction.",
                    "disable": "yes",
                    "buttons": []
                },
                {
                    "name": "last_htlc_temp_address_private_key",
                    "help": "Private Key of creating temporary 2-2 multi-sig address in previous HTLC transaction.",
                    "disable": "yes",
                    "buttons": []
                },
                {
                    "name": "last_htlc_temp_address_for_htnx_private_key",
                    "help": "Private Key of creating temporary 2-2 multi-sig address in previous HTLC htnx transaction.",
                    "disable": "yes",
                    "buttons": []
                },
                {
                    "name": "curr_temp_address_pub_key",
                    "help": "This public key of an address will be used to create a temp 2-2 multi-sig address as output 0 of newer Cx transaction in RSMC.",
                    "disable": "yes",
                    "buttons": []
                },
                {
                    "name": "curr_temp_address_private_key",
                    "help": "This private key of an address will be used to sign newer RDxa and BRxa transaction.",
                    "disable": "yes",
                    "buttons": []
                }
            ]
        },
        {
            "id": "closeHTLCSigned",
            "type_id": -100050,
            "description": "closeHTLCSigned is used to response the request of close HTLC channel.",
            "parameters": [
                {
                    "name": "recipient_node_peer_id",
                    "buttons": [
                        {
                            "innerText": "Counterparties",
                            "onclick": "displayUserDataInNewHtml('Counterparties')"
                        }
                    ]
                },
                {
                    "name": "recipient_user_peer_id",
                    "buttons": [
                        {
                            "innerText": "Counterparties",
                            "onclick": "displayUserDataInNewHtml('Counterparties')"
                        }
                    ]
                },
                {
                    "name": "msg_hash",
                    "help": "The hash of commitment transaction created in CloseHTLC (type -49).",
                    "buttons": [
                    ]
                },
                {
                    "name": "channel_address_private_key",
                    "help": "Client use the private key to sign newer RSMC transaction like C3b.",
                    "imgPath": "doc/tooltip/HTLC-5.png",
                    "disable": "yes",
                    "buttons": []
                },
                {
                    "name": "last_rsmc_temp_address_private_key",
                    "help": "Private Key of creating temporary 2-2 multi-sig address in previous RSMC transaction.",
                    "disable": "yes",
                    "buttons": []
                },
                {
                    "name": "last_htlc_temp_address_private_key",
                    "help": "Private Key of creating temporary 2-2 multi-sig address in previous HTLC transaction.",
                    "disable": "yes",
                    "buttons": []
                },
                {
                    "name": "last_htlc_temp_address_for_htnx_private_key",
                    "help": "Private Key of creating temporary 2-2 multi-sig address in previous HTLC htnx transaction.",
                    "disable": "yes",
                    "buttons": []
                },
                {
                    "name": "curr_temp_address_pub_key",
                    "help": "This public key of an address will be used to create a temp 2-2 multi-sig address as output 0 of newer Cx transaction in RSMC.",
                    "disable": "yes",
                    "buttons": []
                },
                {
                    "name": "curr_temp_address_private_key",
                    "help": "This private key of an address will be used to sign newer RDxa and BRxa transaction.",
                    "disable": "yes",
                    "buttons": []
                }
            ]
        },
        {
            "id": "closeChannel",
            "type_id": -100038,
            "description": "closeChannel request to close a channel.",
            "parameters": [
                {
                    "name": "recipient_node_peer_id",
                    "buttons": [
                        {
                            "innerText": "Counterparties",
                            "onclick": "displayUserDataInNewHtml('Counterparties')"
                        }
                    ]
                },
                {
                    "name": "recipient_user_peer_id",
                    "buttons": [
                        {
                            "innerText": "Counterparties",
                            "onclick": "displayUserDataInNewHtml('Counterparties')"
                        }
                    ]
                },
                {
                    "name": "channel_id",
                    "buttons": [
                        {
                            "innerText": "Display",
                            "onclick": "displayMyChannelList(5, 1)"
                        }
                    ]
                }
            ]
        },
        {
            "id": "closeChannelSigned",
            "type_id": -100039,
            "description": "closeChannelSigned response to request of close a channel.",
            "parameters": [
                {
                    "name": "recipient_node_peer_id",
                    "buttons": [
                        {
                            "innerText": "Counterparties",
                            "onclick": "displayUserDataInNewHtml('Counterparties')"
                        }
                    ]
                },
                {
                    "name": "recipient_user_peer_id",
                    "buttons": [
                        {
                            "innerText": "Counterparties",
                            "onclick": "displayUserDataInNewHtml('Counterparties')"
                        }
                    ]
                },
                {
                    "name": "channel_id",
                    "buttons": [
                        {
                            "innerText": "Display",
                            "onclick": "displayMyChannelList(5, 1)"
                        }
                    ]
                },
                {
                    "name": "request_close_channel_hash",
                    "help": "The hash of request created in CloseChannel (type -38).",
                    "buttons": [
                    ]
                }
            ]
        },
        {
            "id": "atomicSwap",
            "type_id": -100080,
            "description": "atomicSwap notifies the counterparty an atomic swap is created. The background and process of atomic swap can be found in chapter 5 of the OmniBOLT specification.",
            "parameters": [
                {
                    "name": "recipient_node_peer_id",
                    "buttons": [
                        {
                            "innerText": "Counterparties",
                            "onclick": "displayUserDataInNewHtml('Counterparties')"
                        }
                    ]
                },
                {
                    "name": "recipient_user_peer_id",
                    "buttons": [
                        {
                            "innerText": "Counterparties",
                            "onclick": "displayUserDataInNewHtml('Counterparties')"
                        }
                    ]
                },
                {
                    "name": "channel_id_from",
                    "buttons": [
                        {
                            "innerText": "Select",
                            "onclick": "displayMyChannelList(5, 1)"
                        }
                    ]
                },
                {
                    "name": "channel_id_to",
                    "buttons": [
                        {
                            "innerText": "Select",
                            "onclick": "displayMyChannelList(5, 1)"
                        }
                    ]
                },
                {
                    "name": "recipient_user_peer_id",
                    "buttons": [
                        {
                            "innerText": "Counterparties",
                            "onclick": "displayUserDataInNewHtml('Counterparties')"
                        }
                    ]
                },
                {
                    "name": "property_sent",
                    "buttons": [
                    ]
                },
                {
                    "name": "amount",
                    "help": "The number of transfer and minimum amount is 0.001.",
                    "buttons": [
                    ]
                },
                {
                    "name": "exchange_rate",
                    "buttons": [
                    ]
                },
                {
                    "name": "property_received",
                    "buttons": [
                    ]
                },
                {
                    "name": "transaction_id",
                    "buttons": [
                    ]
                },
                {
                    "name": "time_locker",
                    "buttons": [
                    ]
                }
            ]
        },
        {
            "id": "acceptSwap",
            "type_id": -100081,
            "description": "acceptSwap accepts or rejects a swap.",
            "parameters": [
                {
                    "name": "recipient_node_peer_id",
                    "buttons": [
                        {
                            "innerText": "Counterparties",
                            "onclick": "displayUserDataInNewHtml('Counterparties')"
                        }
                    ]
                },
                {
                    "name": "recipient_user_peer_id",
                    "buttons": [
                        {
                            "innerText": "Counterparties",
                            "onclick": "displayUserDataInNewHtml('Counterparties')"
                        }
                    ]
                },
                {
                    "name": "channel_id_from",
                    "buttons": [
                        {
                            "innerText": "Select",
                            "onclick": "displayMyChannelList(5, 1)"
                        }
                    ]
                },
                {
                    "name": "channel_id_to",
                    "buttons": [
                        {
                            "innerText": "Select",
                            "onclick": "displayMyChannelList(5, 1)"
                        }
                    ]
                },
                {
                    "name": "recipient_user_peer_id",
                    "buttons": [
                        {
                            "innerText": "Counterparties",
                            "onclick": "displayUserDataInNewHtml('Counterparties')"
                        }
                    ]
                },
                {
                    "name": "property_sent",
                    "buttons": [
                    ]
                },
                {
                    "name": "amount",
                    "help": "The number of transfer and minimum amount is 0.001.",
                    "buttons": [
                    ]
                },
                {
                    "name": "exchange_rate",
                    "buttons": [
                    ]
                },
                {
                    "name": "property_received",
                    "buttons": [
                    ]
                },
                {
                    "name": "transaction_id",
                    "buttons": [
                    ]
                },
                {
                    "name": "target_transaction_id",
                    "buttons": [
                    ]
                },
                {
                    "name": "time_locker",
                    "buttons": [
                    ]
                }
            ]
        }
    ]
}